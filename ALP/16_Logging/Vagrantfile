# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

config.vm.define "log" do |server|
  config.vm.box = 'ubuntu/focal64'
  server.vm.host_name = 'log'
  server.vm.network :private_network, ip: "192.168.56.100"

  server.vm.provider "virtualbox" do |vb|
    vb.memory = "1024"
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  end

  server.vm.provision "shell", inline: <<-SHELL
			mkdir -p ~root/.ssh
			cp ~vagrant/.ssh/auth* ~root/.ssh
          SHELL
      server.vm.provision :ansible do |ansible|
        ansible.playbook = "playbooks/prepare-log.yml"
      end
  end

  config.vm.define "web" do |client|
    client.vm.box = 'ubuntu/focal64'
    client.vm.host_name = 'web'
    client.vm.network :private_network, ip: "192.168.56.101"
    client.vm.provider :virtualbox do |vb|
      vb.memory = "1024"
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    end
    config.ssh.insert_key = false

	client.vm.provision "shell", inline: <<-SHELL
		mkdir -p ~root/.ssh
		cp ~vagrant/.ssh/auth* ~root/.ssh
		#echo "Config sshd"
    #      sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
    #      systemctl restart sshd
		#echo "Provision on nginx.client done!"
    SHELL
  client.vm.provision :ansible do |ansible|
    ansible.playbook = "playbooks/prepare-web.yml"
  end

  end

end
